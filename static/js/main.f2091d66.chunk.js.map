{"version":3,"sources":["components/EmployeeTable.js","utils/API.js","components/Body.js","App.js","index.js"],"names":["EmployeeData","users","formatDate","date","dateArray","split","year","join","undefined","name","map","login","picture","phone","email","dob","dat-th","className","src","medium","alt","first","last","data-th","href","target","uuid","axios","get","Body","state","sortedUsers","heading","API","then","results","setState","data","this","filter","user","charAt","sort","a","b","localeCompare","onClick","checkA","sortAlpha","EmployeeTable","handleSort","Component","App","ReactDOM","render","document","getElementById"],"mappings":"qOAkEeA,MAhEf,YAAkC,IAAVC,EAAS,EAATA,MACpB,SAASC,EAAWC,GAChB,IAAMC,EAAYD,EAAKE,MAAM,KACvBC,EAAOF,EAAU,GAKvB,MADsB,CAHRA,EAAU,GACPA,EAAU,GAAGC,MAAM,KACf,GACcC,GAAMC,KAAK,KAKlD,OACI,qCAE0BC,IAAbP,EAAM,SAAsCO,IAAlBP,EAAM,GAAGQ,KAGhCR,EAAMS,KAAI,YAOH,IANHC,EAME,EANFA,MACAF,EAKE,EALFA,KACAG,EAIE,EAJFA,QACAC,EAGE,EAHFA,MACAC,EAEE,EAFFA,MACAC,EACE,EADFA,IAEA,OACI,+BACI,oBAAIC,SAAO,QAAQC,UAAU,eAA7B,SACI,qBACAC,IAAKN,EAAQO,OACbC,IAAK,qBAAuBX,EAAKY,MAAQ,IAAMZ,EAAKa,KACpDL,UAAU,qBAGd,qBAAID,SAAO,OAAOC,UAAU,eAA5B,UACKR,EAAKY,MADV,IACkBZ,EAAKa,QAEvB,oBAAIC,UAAQ,QAAQN,UAAU,eAA9B,SACKJ,IAEL,oBAAIG,SAAO,QAAQC,UAAU,eAA7B,SACI,mBAAGO,KAAM,UAAYV,EAAOW,OAAO,UAAnC,SACKX,MAGT,oBAAIS,UAAQ,MAAMN,UAAU,eAA5B,SACKf,EAAWa,EAAIZ,UApBfQ,EAAMe,SA6BvB,gC,iBCvDT,EACH,WACR,OAAOC,IAAMC,IAAI,gDCCAC,E,4MACjBC,MAAO,CACH7B,MAAO,CAAC,IACR8B,YAAa,CAAC,K,EAElBC,QAAU,CACN,QAAS,OAAQ,QAAS,QAAS,O,kEAGlB,IAAD,OAChBC,IAAeC,MAAK,SAAAC,GAChB,EAAKC,SAAS,CACVnC,MAAOkC,EAAQE,KAAKF,QACpBJ,YAAaI,EAAQE,KAAKF,e,+BAM9BG,KAAKF,SAAL,2BACOE,KAAKR,MAAM7B,OADlB,IAEI8B,YAAaO,KAAKR,MAAM7B,MAAMsC,QAAO,SAAAC,GAAI,MAAkC,MAA9BA,EAAK/B,KAAKY,MAAMoB,OAAO,W,kCAK5EH,KAAKF,SAAL,2BACOE,KAAKR,MAAM7B,OADlB,IAEI8B,YAAaO,KAAKR,MAAM7B,MAAMyC,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAElC,KAAKa,KAAKuB,cAAcD,EAAEnC,KAAKa,c,+BAM5E,IAAD,OACL,OACI,qCACA,wBAAQwB,QAAS,kBAAK,EAAKC,UAA3B,qBACA,wBAAQD,QAAS,kBAAK,EAAKE,aAA3B,wBACA,qBAAK/B,UAAU,YAAf,SACA,cAACgC,EAAD,CACIjB,QAAWM,KAAKN,QAChB/B,MAAOqC,KAAKR,MAAMC,YAClBmB,WAAYZ,KAAKY,sB,GA3CCC,aCUnBC,MARf,WACE,OACE,8BACE,cAAC,EAAD,O,YCLNC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.f2091d66.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction EmployeeData({ users }) {\r\n    function formatDate(date) {\r\n        const dateArray = date.split(\"-\");\r\n        const year = dateArray[0];\r\n        const month = dateArray[1];\r\n        const dayArray = dateArray[2].split(\"T\");\r\n        const day = dayArray[0];\r\n        const formattedDate = [month, day, year].join(\"-\");\r\n        return formattedDate;\r\n    }\r\n\r\n\r\n    return (\r\n        <tbody>\r\n            {/* 2 buttons go here */}\r\n                    {users[0] !== undefined && users[0].name !== undefined ? (\r\n\r\n\r\n                        users.map(({ \r\n                            login,\r\n                            name,\r\n                            picture,\r\n                            phone,\r\n                            email,\r\n                            dob\r\n                        }) => {\r\n                            return (\r\n                                <tr key={login.uuid}>\r\n                                    <td dat-th=\"Image\" className=\"align-middle\">\r\n                                        <img\r\n                                        src={picture.medium}\r\n                                        alt={\"profile image for \" + name.first + \" \" + name.last}\r\n                                        className=\"img-responsive\"\r\n                                        />\r\n                                    </td>\r\n                                    <td dat-th=\"Name\" className=\"align-middle\">\r\n                                        {name.first} {name.last}\r\n                                    </td>\r\n                                    <td data-th=\"Phone\" className=\"align-middle\">\r\n                                        {phone}\r\n                                    </td>\r\n                                    <td dat-th=\"Email\" className=\"align-middle\">\r\n                                        <a href={\"mailto:\" + email} target=\"__blank\">\r\n                                            {email}\r\n                                        </a>\r\n                                    </td>\r\n                                    <td data-th=\"DOB\" className=\"align-middle\">\r\n                                        {formatDate(dob.date)}\r\n                                    </td>\r\n                                </tr>\r\n                            );\r\n                        })\r\n                        \r\n\r\n\r\n                    ) : (\r\n                        <>\r\n                        </>\r\n                    )}\r\n             </tbody>\r\n            // </table>\r\n    )\r\n}\r\n\r\nexport default EmployeeData","import axios from \"axios\";\n\n// Export an object containing methods we'll use for accessing the random user API\nexport default {\n  getUsers: function() {\n    return axios.get(\"https://randomuser.me/api?results=50&nat=us\")\n  }\n};\n","import React from \"react\";\r\nimport { Component } from \"react\";\r\n// import Navbar from \"./Navbar.js\";\r\nimport EmployeeTable from \"./EmployeeTable.js\"\r\nimport API from \"../utils/API.js\";\r\n\r\nexport default class Body extends Component {\r\n    state= {\r\n        users: [{}],\r\n        sortedUsers: [{}]\r\n    }\r\n    heading = [\r\n        \"Image\", \"Name\", \"Phone\", \"Email\", \"DOB\"\r\n    ]\r\n\r\n    componentDidMount() {\r\n        API.getUsers().then(results => {\r\n            this.setState({\r\n                users: results.data.results,\r\n                sortedUsers: results.data.results\r\n            });\r\n        });\r\n    }\r\n\r\n    checkA() {\r\n            this.setState({\r\n                ...this.state.users,\r\n                sortedUsers: this.state.users.filter(user => user.name.first.charAt(0) === \"A\")\r\n            })\r\n    } \r\n\r\n    sortAlpha() {\r\n        this.setState({\r\n            ...this.state.users,\r\n            sortedUsers: this.state.users.sort((a, b) => a.name.last.localeCompare(b.name.last))\r\n        })\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n            <button onClick={()=> this.checkA()}>Check A</button>\r\n            <button onClick={()=> this.sortAlpha()}>Sort Alpha</button>\r\n            <div className=\"data-area\">\r\n            <EmployeeTable \r\n                heading = {this.heading}\r\n                users={this.state.sortedUsers}\r\n                handleSort={this.handleSort}\r\n            />\r\n            </div>\r\n            </>\r\n\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\nimport Body from \"./components/Body\"\n// import Navbar from \"./components/Navbar\";\n// import Header from \"./components/Header\";\n// import Footer from \"./components/Footer\";\n// import Wrapper from \"./components/Wrapper\";\n// import Main from \"./components/Main\";\n\nfunction App() {\n  return (\n    <div>\n      <Body />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}